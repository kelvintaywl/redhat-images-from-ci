version: 2.1

parameters:
  parallelism:
    type: integer
    default: 5

executors:
  ubuntu2204:
    machine:
      image: ubuntu-2204:2024.02.7
    resource_class: medium

commands:
  enable_debug_on_docker_daemon:
    steps:
      # ASSUMPTION: /etc/docker/daemon.json does not exist on CircleCI's Linux machines
      - run:
          name: add debug flag for Docker daemon config
          command: |
            sudo bash -c "jq -cn '.debug = true' > /etc/docker/daemon.json"
      - run:
          name: restart Docker daemon
          command: |
            sudo systemctl restart docker
  collect_docker_daemon_logs:
    parameters:
      last_n_lines:
        type: integer
        default: 5000
    steps:
      - run:
          name: collect Docker daemon logs
          when: always
          command: |
            journalctl -u docker.service -n << parameters.last_n_lines >> > docker_daemon.log
      - store_artifacts:
          path: docker_daemon.log

jobs:
  docker-pull:
    parameters:
      machine:
        type: string
        description: CircleCI Machine executor image
      pull-img:
        type: string
        description: Docker image to pull
    machine:
      image: << parameters.machine >>
    resource_class: medium
    parallelism: << pipeline.parameters.parallelism >>
    steps:
      - enable_debug_on_docker_daemon
      - run: docker info
      - run:
          name: dig registry
          command: dig registry.access.redhat.com
      - run:
          name: collect tcpdump
          command: |
            mkdir -p /tmp/tcpdumps
            chmod +wx /tmp/tcpdumps
            # will generate files like tcpdumps/out.pcap0 ... tcpdumps/out.pcap9
            # ref: https://opensource.com/article/18/10/introduction-tcpdump#:~:text=Tcpdump%20is%20a%20command%20line,in%20a%20variety%20of%20cases.
            sudo tcpdump -ni any -W 10 -C 100 -w /tmp/tcpdumps/out.pcap
          background: true
      - run: docker pull << parameters.pull-img >>
      - run:
          name: dig registry (again)
          when: on_fail
          command: dig registry.access.redhat.com
      - store_artifacts:
          path: /tmp/tcpdumps
      - collect_docker_daemon_logs

workflows:
  scheduled:
    when:
      or:
        - equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
        - equal: [ api, << pipeline.trigger_source >> ]
    jobs:
      - docker-pull:
          matrix:
            parameters:
              machine:
                - ubuntu-2204:2024.02.7
                - ubuntu-2204:2024.01.2
              pull-img:
                - registry.access.redhat.com/ubi9/nodejs-16:1
                - registry.access.redhat.com/ubi9/nodejs-18:latest
  
